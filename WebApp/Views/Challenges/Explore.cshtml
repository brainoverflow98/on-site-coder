@model IEnumerable<ChallengeOverviewModel>
@{
    ViewData["Title"] = "Explore";
}

@section Styles {
    <style>

        body {
            background: linear-gradient(209.64deg, rgba(60, 72, 211, 0.75) 4.22%, rgba(76, 143, 239, 0.75) 63.76%, rgba(127, 240, 255, 0.75) 86.94%);
            grid-template-areas: "header header" "nav nav" "code code" "footer footer";
            grid-template-columns: 200px 1fr;
        }

        * {
            box-sizing: border-box;
        }

        td, th {
            border: 1px solid #dddddd;
            text-align: left;
            padding: 8px;
        }
    </style>
}

<nav id="mainNav">

    <br>
    <form class="example" style="margin:auto; max-width:400px">
        <input name="SearchText" type="text" placeholder="Enter challenge ID" style="height: 60px;">
        <button type="submit">Go</button>
        <br>
        <br>
        <br>
        <br>
        <div class="custom-select">
            <select name="SortBy" asp-items="@(typeof(SortField).ToSelectList(new SelectListOptions { Placeholder="Sort By" }))"></select>
        </div>

        <div class="custom-select" style="margin-left: 5px;">
            <select name="ProgramingLanguage" asp-items="@(typeof(ProgramingLanguage).ToSelectList(new SelectListOptions { Placeholder="All Languages" }))"></select>
        </div>

    </form>
</nav>



<table class="search-table" id="indextable" border="1" cellpadding="10" cellspacing="0" style="border-collapse:collapse; position: absolute; top: 200px">
    <thead>
        <tr class="search-table">
            <th class="search-table"><a class="search-table" href="javascript:SortTable(0,'T');">Name</a></th>
            <th class="search-table"><a class="search-table" href="javascript:SortTable(1,'T');">Creator</a></th>
            <th class="search-table"><a class="search-table" href="javascript:SortTable(2,'N');">Participants</a></th>
            <th class="search-table"><a class="search-table" href="javascript:SortTable(3,'D','mdy');">Creation Date</a></th>
            <th class="search-table"><a class="search-table" href="javascript:SortTable(4,'D','mdy');">Due Date</a></th>
            <th class="search-table"><a class="search-table" href="javascript:SortTable(4,'T');">Language</a></th>
        </tr>
    </thead>
    <tbody>
        @foreach (var challenge in Model)
        {
            <tr class="search-table">
                <td><p><a class="search-table" href="Solve/@challenge.Id">@challenge.Name</a></p></td>
                <td>@challenge.OwnerDisplayName</td>
                <td>@challenge.ParticipantCount</td>
                <td>@challenge.CreationDate</td>
                <td>@challenge.DueDate</td>
                <td>@challenge.ProgramingLanguage</td>
            </tr>
        }
    </tbody>
</table>

@section Scripts {
    <script type="text/javascript">
        var TableIDvalue = "indextable";

        var TableLastSortedColumn = -1;
        function SortTable() {
            var sortColumn = parseInt(arguments[0]);
            var type = arguments.length > 1 ? arguments[1] : 'T';
            var dateformat = arguments.length > 2 ? arguments[2] : '';
            var table = document.getElementById(TableIDvalue);
            var tbody = table.getElementsByTagName("tbody")[0];
            var rows = tbody.getElementsByTagName("tr");
            var arrayOfRows = new Array();
            type = type.toUpperCase();
            dateformat = dateformat.toLowerCase();
            for (var i = 0, len = rows.length; i < len; i++) {
                arrayOfRows[i] = new Object;
                arrayOfRows[i].oldIndex = i;
                var celltext = rows[i].getElementsByTagName("td")[sortColumn].innerHTML.replace(/<[^>]*>/g, "");
                if (type == 'D') { arrayOfRows[i].value = GetDateSortingKey(dateformat, celltext); }
                else {
                    var re = type == "N" ? /[^\.\-\+\d]/g : /[^a-zA-Z0-9]/g;
                    arrayOfRows[i].value = celltext.replace(re, "").substr(0, 25).toLowerCase();
                }
            }
            if (sortColumn == TableLastSortedColumn) { arrayOfRows.reverse(); }
            else {
                TableLastSortedColumn = sortColumn;
                switch (type) {
                    case "N": arrayOfRows.sort(CompareRowOfNumbers); break;
                    case "D": arrayOfRows.sort(CompareRowOfNumbers); break;
                    default: arrayOfRows.sort(CompareRowOfText);
                }
            }
            var newTableBody = document.createElement("tbody");
            for (var i = 0, len = arrayOfRows.length; i < len; i++) {
                newTableBody.appendChild(rows[arrayOfRows[i].oldIndex].cloneNode(true));
            }
            table.replaceChild(newTableBody, tbody);
        } // function SortTable()

        function CompareRowOfText(a, b) {
            var aval = a.value;
            var bval = b.value;
            return (aval == bval ? 0 : (aval > bval ? 1 : -1));
        } // function CompareRowOfText()

        function CompareRowOfNumbers(a, b) {
            var aval = /\d/.test(a.value) ? parseFloat(a.value) : 0;
            var bval = /\d/.test(b.value) ? parseFloat(b.value) : 0;
            return (aval == bval ? 0 : (aval > bval ? 1 : -1));
        } // function CompareRowOfNumbers()

        function GetDateSortingKey(format, text) {
            if (format.length < 1) { return ""; }
            format = format.toLowerCase();
            text = text.toLowerCase();
            text = text.replace(/^[^a-z0-9]*/, "");
            text = text.replace(/[^a-z0-9]*$/, "");
            if (text.length < 1) { return ""; }
            text = text.replace(/[^a-z0-9]+/g, ",");
            var date = text.split(",");
            if (date.length < 3) { return ""; }
            var d = 0, m = 0, y = 0;
            for (var i = 0; i < 3; i++) {
                var ts = format.substr(i, 1);
                if (ts == "d") { d = date[i]; }
                else if (ts == "m") { m = date[i]; }
                else if (ts == "y") { y = date[i]; }
            }
            d = d.replace(/^0/, "");
            if (d < 10) { d = "0" + d; }
            if (/[a-z]/.test(m)) {
                m = m.substr(0, 3);
                switch (m) {
                    case "jan": m = String(1); break;
                    case "feb": m = String(2); break;
                    case "mar": m = String(3); break;
                    case "apr": m = String(4); break;
                    case "may": m = String(5); break;
                    case "jun": m = String(6); break;
                    case "jul": m = String(7); break;
                    case "aug": m = String(8); break;
                    case "sep": m = String(9); break;
                    case "oct": m = String(10); break;
                    case "nov": m = String(11); break;
                    case "dec": m = String(12); break;
                    default: m = String(0);
                }
            }
            m = m.replace(/^0/, "");
            if (m < 10) { m = "0" + m; }
            y = parseInt(y);
            if (y < 100) { y = parseInt(y) + 2000; }
            return "" + String(y) + "" + String(m) + "" + String(d) + "";
        } // function GetDateSortingKey()
    </script>

    <script>
        var x, i, j, selElmnt, a, b, c;
        /*look for any elements with the class "custom-select":*/
        x = document.getElementsByClassName("custom-select");
        for (i = 0; i < x.length; i++) {
            selElmnt = x[i].getElementsByTagName("select")[0];
            /*for each element, create a new DIV that will act as the selected item:*/
            a = document.createElement("DIV");
            a.setAttribute("class", "select-selected");
            a.innerHTML = selElmnt.options[selElmnt.selectedIndex].innerHTML;
            x[i].appendChild(a);
            /*for each element, create a new DIV that will contain the option list:*/
            b = document.createElement("DIV");
            b.setAttribute("class", "select-items select-hide");
            for (j = 1; j < selElmnt.length; j++) {
                /*for each option in the original select element,
                create a new DIV that will act as an option item:*/
                c = document.createElement("DIV");
                c.innerHTML = selElmnt.options[j].innerHTML;
                c.addEventListener("click", function (e) {
                    /*when an item is clicked, update the original select box,
                    and the selected item:*/
                    var y, i, k, s, h;
                    s = this.parentNode.parentNode.getElementsByTagName("select")[0];
                    h = this.parentNode.previousSibling;
                    for (i = 0; i < s.length; i++) {
                        if (s.options[i].innerHTML == this.innerHTML) {
                            s.selectedIndex = i;
                            h.innerHTML = this.innerHTML;
                            y = this.parentNode.getElementsByClassName("same-as-selected");
                            for (k = 0; k < y.length; k++) {
                                y[k].removeAttribute("class");
                            }
                            this.setAttribute("class", "same-as-selected");
                            break;
                        }
                    }
                    h.click();
                });
                b.appendChild(c);
            }
            x[i].appendChild(b);
            a.addEventListener("click", function (e) {
                /*when the select box is clicked, close any other select boxes,
                and open/close the current select box:*/
                e.stopPropagation();
                closeAllSelect(this);
                this.nextSibling.classList.toggle("select-hide");
                this.classList.toggle("select-arrow-active");
            });
        }
        function closeAllSelect(elmnt) {
            /*a function that will close all select boxes in the document,
            except the current select box:*/
            var x, y, i, arrNo = [];
            x = document.getElementsByClassName("select-items");
            y = document.getElementsByClassName("select-selected");
            for (i = 0; i < y.length; i++) {
                if (elmnt == y[i]) {
                    arrNo.push(i)
                } else {
                    y[i].classList.remove("select-arrow-active");
                }
            }
            for (i = 0; i < x.length; i++) {
                if (arrNo.indexOf(i)) {
                    x[i].classList.add("select-hide");
                }
            }
        }
        /*if the user clicks anywhere outside the select box,
        then close all select boxes:*/
        document.addEventListener("click", closeAllSelect);
    </script>
}

